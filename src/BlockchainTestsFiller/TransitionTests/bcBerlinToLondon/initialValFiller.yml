# Check that the initial values for EIP1559 (baseFee and gasLimit) are the correct ones

initialVal:
  genesisBlockHeader:
    bloom: '0x
    coinbase: '0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba'
    difficulty: '131072'
    extraData: '0x42'
    gasUsed: '0'
    mixHash: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    nonce: '0x0102030405060708'
    number: '0'
    parentHash: '0x0000000000000000000000000000000000000000000000000000000000000000'
    receiptTrie: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    stateRoot: '0xf99eb1626cfa6db435c0836235942d7ccaa935f1ae247d3f1c21e495685f903a'
    timestamp: '0x03b6'
    transactionsTrie: '0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421'
    uncleHash: '0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347'
    gasLimit: 10000000000
  sealEngine: NoProof

  pre:
    0xa94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 0x10000000000000000
      code: ''
      nonce: 1
      storage: {}

    0xd02d72E067e77158444ef2020Ff2d325f929B363:
      balance: 0x10000000000000000
      nonce: 1
      code: ''
      storage: {}

    # Record some variables
    0xcccccccccccccccccccccccccccccccccccccccc:
      balance: 0
      nonce: 1
      code: |
        {
           (sstore $4 (gasprice))
           (sstore (add $4 1) (basefee))
           (sstore (add $4 2) (sub (gasprice) (basefee)))
           (sstore (add $4 3) (gaslimit))
        }
      storage: {}


    # Record the gas price total only (for Berlin Transactions)
    0xcccccccccccccccccccccccccccccccccccccccd:
      balance: 0
      nonce: 1
      code: |
        {
           (sstore $4 (gasprice))
           (sstore (add $4 3) (gaslimit))
        }
      storage: {}




  blocks:

  # Block 1
  - transactions: []  
  # Block 2
  - transactions: []  
  # Block 3
  - transactions: []  
  # Block 4
  - transactions:
    # The call to cc..cc fails because there is no BASEFEE opcode yet
    - data: :abi f(uint) 0x4000
      gasLimit: 500000
      gasPrice: 1000000000
      nonce: 1
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0
    # This call to cc..cd should be successful (type 0 transaction)
    - data: :abi f(uint) 0x4000
      gasLimit: 500000
      gasPrice: 1000000000
      nonce: 2
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCD
      value: 0x0

    # This call to cc..cd should be successful (type 1 transaction)
    - data: :abi f(uint) 0x4010
      accessList: []
      gasLimit: 500000
      gasPrice:  100000000
      nonce: 3
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCD
      value: 0x0

    # This transaction is a type 2 and should fail here
    - data: :abi f(uint) 0x4020
      invalid: 1
      accessList: []
      gasLimit: 500000
      maxFeePerGas: 1000001000
      maxPriorityFeePerGas: 256
      nonce: 4
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCD
      value: 0x0

  # Block 5     
  - transactions:
    # This call to cc..cc shows us that the first London block has the correct
    # baseFee and gasLimit
    - data: :abi f(uint) 0x5000
      gasLimit: 1000000
      gasPrice: 1000000000
      nonce: 4      # Failed transactions don't raise the nonce
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0

    # This call shows us that the tip is calculated correctly for type 0 transactions
    - data: :abi f(uint) 0x5010
      gasLimit: 500000
      gasPrice: 1000001000
      nonce: 5
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0

    # This call shows us that the tip is calculated correctly for type 1 transactions
    - data: :abi f(uint) 0x5020
      accessList: []
      gasLimit: 500000
      gasPrice: 1000001000
      nonce: 6
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0

    # Correct tip for type 2 transaction
    - data: :abi f(uint) 0x5030
      accessList: []
      gasLimit: 500000
      maxFeePerGas: 1000001000
      maxPriorityFeePerGas: 256
      nonce: 7
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0

  # Block 6   
  - transactions:
    # This call to cc..cc shows us that subsequent London blocks have a different
    # baseFee (the gasLimit stays the same unless changed)
    - data: :abi f(uint) 0x6000
      gasLimit: 1000000
      gasPrice: 1000000000
      nonce: 8
      secretKey: 41f6e321b31e72173f8ff2e292359e1862f24fba42fe6f97efaf641980eff298
      to: 0xCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCC
      value: 0x0


  expect:
  - network:
    - BerlinToLondonAt5

    result:
      0xcccccccccccccccccccccccccccccccccccccccd:
        storage:
          0x4000:  1000000000 # gasPrice
          0x4003: 10000000000 # block gasLimit

          0x4010:   100000000 # gasPrice
          0x4013: 10000000000 # block gasLimit


      0xcccccccccccccccccccccccccccccccccccccccc:
        storage:
          # Block 5, first transaction  (type 0)
          0x5000: 1000000000 # gasPrice
          0x5001: 1000000000 # baseFee
          0x5002:          0 # tip (none here)
          0x5003:   12500000 # block gasLimit
          
          # Block 5, second transaction (type 0)
          0x5010: 1000001000 # gasPrice
          0x5011: 1000000000 # baseFee
          0x5012:       1000 # tip
          0x5013:   12500000 # block gasLimit
 
          # Block 5, third transaction (type 1)
          0x5020: 1000001000
          0x5021: 1000000000
          0x5022:       1000
          0x5023:   12500000

          # Block 5, fourth transaction (type 2)
          0x5030: 1000000256
          0x5031: 1000000000
          0x5032:        256
          0x5033:   12500000

          # Block 6
          0x6000: 1000000000  # Same gasPrice as the first transaction of block 5
          0x6001:  883375440  # But since it was underutilized, baseFee is lower
          0x6002:  116624560  # Which raises the tip
          0x6003:   12500000  # gasLimit doesn't change (on the test system) automatically
