# Verifies RANDOM (Previously DIFFICULTY) opcode post-merge state as part of initcode.
randomOpcodeInit:
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x00'
    currentRandom: '0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef'
    currentGasLimit: '89128960'
    currentBaseFee: '10'
    currentNumber: '1'
    currentTimestamp: '1000'
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6

  pre:
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: 1000000000
      code: ''
      nonce: 0
      storage: {}

  transaction:
    data: 
      - |
        :yul
        {
          // Store all opcodes coming from the block header to verify nothing else is affected.
          sstore(0, coinbase())
          sstore(1, timestamp())
          sstore(2, number())
          sstore(3, difficulty())
          sstore(4, gaslimit())
        }
    gasLimit:
      - 70000000
    gasPrice: 10
    nonce: 0
    secretKey: 45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8
    to: ''
    value:
    - 0

  expect:
    - indexes:
       data: !!int -1
       gas: !!int -1
       value: !!int -1
      network:
        - '>=London'
      result:
       a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
          nonce: 1
       6295ee1b4f6dd65047762f924ecd367c17eabf8f:
          nonce: '0x01'
          storage:
            '0': '0x2adc25665018aa1fe0e6bc666dac8fc2697ff9ba'
            '1': '0x3e8'
            '2': '0x01'
            '3': '0x0123456789abcdef0123456789abcdef0123456789abcdef0123456789abcdef'
            '4': '0x5500000'
       