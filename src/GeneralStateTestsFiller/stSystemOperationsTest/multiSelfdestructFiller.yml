multiSelfdestruct:

  _info:
    comment: |
       Implements: SUC000, SUC001, SUC002, SUC003, SUC004, SUC005
  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: 0x20000
    currentGasLimit: 0xFF112233445566
    currentNumber: 1
    currentTimestamp: 1000
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6
    currentBaseFee: 1000


  pre:

    # Suicidal contract.
    # Byte 0: What do to
    #    00 - nothing
    #    01-FE - transfer that many wei
    #    FF - self destruct
    # Bytes 1&2: Recipient address
    000000000000000000000000000000000000dead:
      balance: 3
      nonce: 1
      code: |
        :yul {
           let operation := shr(248, calldataload(0))
           let recipient := and(shr(232, calldataload(0)), 0xFFFF)

           // Don't do anything
           if eq(operation, 0) {
             stop()
           }

           // Selfdestruct
           if eq(operation, 0xFF) {
             selfdestruct(recipient)
           }

           // Send value
           // If the call fails, revert
           if eq(call(gas(), recipient, operation, 0,0, 0,0),0) {
              revert(0,0)
           }
          
        }
      storage: {}




    cccccccccccccccccccccccccccccccccccccccc:
      balance: 100000000
      nonce: 1
      code: |
          :yul {
             let delme

             // Selfdestruct, send balance to 0x1000
             // SUC000
             mstore8(0, 0xFF)
             mstore8(1, 0x10)
             mstore8(2, 0x00)
             delme := call(gas(), 0xdead, 0, 0,3, 0,0)
             sstore(0x00, balance(0x1000))
             sstore(0x10, delme)

             // Don't do anything, just receive a wei
             // SUC001
             mstore8(0, 0x00)
             delme := call(gas(), 0xdead, 1, 0,3, 0,0)
             sstore(0x01, balance(0xdead))
             sstore(0x11, delme)

             // Selfdestruct #2, send balance to 0x1000
             // SUC002
             mstore8(0, 0xFF)
             mstore8(1, 0x10)
             mstore8(2, 0x00)
             delme := call(gas(), 0xdead, 0, 0,3, 0,0)
             sstore(0x02, balance(0x1000))
             sstore(0x12, delme)


             // Selfdestruct #3, send balance to 0x1001
             // SUC003
             mstore8(0, 0xFF)
             mstore8(1, 0x10)
             mstore8(2, 0x01)
             delme := call(gas(), 0xdead, 0, 0,3, 0,0)
             sstore(0x03, balance(0x1001))
             sstore(0x13, delme)

             // Try to send 1 wei to 0x1001 (fail, 0xDEAD doesn't have any)
             // SUC004
             mstore8(0, 0x01)
             mstore8(1, 0x10)
             mstore8(2, 0x01)
             delme := call(gas(), 0xdead, 0, 0,3, 0,0)
             sstore(0x04, balance(0x1001))
             sstore(0x14, delme)


             // Try to send 1 wei to 0x1001 again
             // This time it's successful, because we fund 0xDEAD to do it
             mstore8(0, 0x01)
             mstore8(1, 0x10)
             mstore8(2, 0x01)
             delme := call(gas(), 0xdead, 2, 0,3, 0,0)
             sstore(0x05, balance(0x1001))
             sstore(0x15, delme)


             // Final SELFDESTRUCT
             // Send 17 wei to 0x1002
             //  1 from the previous call
             // 16 from this call
             // SUC005
             mstore8(0, 0xFF)
             mstore8(1, 0x10)
             mstore8(2, 0x02)
             delme := call(gas(), 0xdead, 16, 0,3, 0,0)
             sstore(0x06, balance(0x1002))
             sstore(0x16, delme)

          }
      nonce: 1
      storage:
        0x00: 0x60A7
        0x01: 0x60A7
        0x02: 0x60A7
        0x03: 0x60A7
        0x04: 0x60A7
        0x05: 0x60A7
        0x06: 0x60A7
        0x10: 0x60A7
        0x11: 0x60A7
        0x12: 0x60A7
        0x13: 0x60A7
        0x14: 0x60A7
        0x15: 0x60A7
        0x16: 0x60A7

    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '1000000000000000000'
      code: '0x'
      nonce: 1
      storage: {}


  transaction:
    data: 
    - 0x
    gasLimit:
    - 10000000
    gasPrice: 1000
    nonce: 1
    to: cccccccccccccccccccccccccccccccccccccccc
    value:
    - 0
    secretKey: "45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"


  expect:
    - indexes:
        data: !!int -1
        gas:  !!int -1
        value: !!int -1

      network:
        - '>=London'
      result:
        cccccccccccccccccccccccccccccccccccccccc:
          storage:
            0x00: 3    # Balance of 0x1000 after first SELFDESTRUCT
            0x10: 1    # Call to 0xDEAD was successful

            0x01: 1    # Balance of 0xDEAD after it receives 1 wei
            0x11: 1    # Call to 0xDEAD was successful

            0x02: 4    # Balance of 0x1000 after 2nd SELFDESTRUCT 
            0x12: 1    # Call to 0xDEAD was successful

            0x03: 0    # Balance of 0x1001 after 3rd SELFDESTURCT, which transferred 0 wei
            0x13: 1    # Call to 0xDEAD was successful

            0x04: 0    # Balance of 0x1001, after 0xDEAD attempted to transfer 1 wei
            0x14: 0    # Call to 0xDEAD failed (because the transfer call in 0xDEAD failed)

            0x05: 1    # Balance of 0x1001, after 0xDEAD transfered 1 wei
            0x15: 1    # Call to 0xDEAD was successful

            0x06: 0x11 # Balance 0f 0x1002 after the last SELFDESTRUCT
            0x16: 1    # Call to 0xDEAD was successful
