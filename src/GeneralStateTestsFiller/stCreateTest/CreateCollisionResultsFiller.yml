CreateCollisionResults:

  env:
    currentCoinbase: 2adc25665018aa1fe0e6bc666dac8fc2697ff9ba
    currentDifficulty: '0x20000'
    currentGasLimit: 0x100000000
    currentNumber: "1"
    currentTimestamp: "1000"
    previousHash: 5e20a0453cecd065ea59c37ac63e079ee08998b6045136a8ce6635c7912ec0b6

  _info:
    comment: Ori Pomerantz qbzzt1@gmail.com


  pre:
 
    # Same address as CREATE creates. 
    8af6a7af30d840ba137e8f3f34d54cfb8beba6e2:
      balance: '0x0ba1a9ce0ba1a9ce'
      code:   | 
        {
          [[0]] 0x001D
        }
      nonce: '0'
      storage:
        0x0: 0x60A7


    # Same address as CREATE2 creates
    40f1299359ea754ac29eb2662a1900752bf8275f:
      balance: '0x0ba1a9ce0ba1a9ce'
      code:   | 
        {
          [[0]] 0x001D
        }
      nonce: '0'
      storage:
        0x0: 0x60A7


    cccccccccccccccccccccccccccccccccccccccc:
      balance: '0x0ba1a9ce0ba1a9ce'
      code:   | 
        {

          ; Variables are 0x20 bytes (= 256 bits) apart, except for
          ; code buffers that get 0x100 (256 bytes)
          (def 'creation          0x100)
          (def 'contractCode      0x200)
          (def 'constructorCode   0x300)
          (def 'extCode           0x400)
          (def 'contractLength    0x520)
          (def 'constructorLength 0x540)
          (def 'extLength         0x560)
          (def 'addr1             0x600)
          (def 'addr2             0x620)
          (def 'callRet           0x640)

          ; Other constants
          (def 'NOP 0)   ; No OPeration

          ; Understand the input.
          [creation]       (shr $ 0 248)

          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ; Create the contract and a constructor to pass to CREATE[2]
          ;

          [constructorLength] 
            (lll {   ; successful constructor
               (return contractCode
                  ; write the contract to constructor memory 
                  (lll
                     (sstore 0 0xFF)
                     contractCode
                  ) ; inner lll
               )  } ; return contractCode (lll ...)
                constructorCode
            )       ; outer lll, if successful

          [contractLength]
            (lll
               (sstore 0 0xFF)
               contractCode
            )

          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ; Actually create the contract
          ;
          (if (= @creation 1)
            [addr1] (create 0 constructorCode @constructorLength)
            [addr1] (create2 0 constructorCode @constructorLength 0x5a17)
          )

          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ; RETURNDATASIZE should be zero
          ;

          [[0x10]] (returndatasize)
          [[0x11]] @addr1

          ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
          ; CALL the address where the contract should have been created

          [callRet] (call 0xFFFF 
                         0x8af6a7af30d840ba137e8f3f34d54cfb8beba6e2 0 0 0 0 0)

          [[0x12]] (- @callRet 1)
          [[0x13]] (returndatasize)  


          [callRet] (call 0xFFFF 
                         0x40f1299359ea754ac29eb2662a1900752bf8275f 0 0 0 0 0)


          [[0x14]] (- @callRet 1)
          [[0x15]] (returndatasize)  




        }   ; end of LLL code
      nonce: '0'
      storage:
        0x10: 0x60A7 # Return data size from CREATE[2]
        0x11: 0x60A7 # Address of created contract
        0x12: 0x60A7 # Return value of the first CALL minus 1 (0 if success)
        0x13: 0x60A7 # Return data size from the first CALL
        0x14: 0x60A7 # Return value of the second CALL minus 1 (0 if success)
        0x15: 0x60A7 # Return data size from the second CALL


    # User account
    a94f5374fce5edbc8e2a8697c15331677e6ebf0b:
      balance: '0x0ba1a9ce0ba1a9ce'
      code: '0x'
      nonce: '0'
      storage: {}


  transaction:
    data:
    # MSB
    #
    # Create type:    01 - CREATE  02 - CREATE2
    #
    # LSB  
    - :raw 0x01
    - :raw 0x02
    gasLimit:
    - 0x900000
    gasPrice: '1'
    nonce: '0'
    to: cccccccccccccccccccccccccccccccccccccccc
    secretKey: "45a915e4d060149eb4365960e6a7a45f334393093061116b197e3240065ff2d8"
    value:
    - 0

  expect:
     
    # All but static calls (which cannot change storage), with sufficient gas
    - indexes:
        data: !!int -1
        gas:  !!int 0
        value: !!int 0
      network:
        - '>=Istanbul'
      result:

        cccccccccccccccccccccccccccccccccccccccc:
          storage: {}
            # In the case of a collision CREATE[2] just pops the 
            # parameter values from the stack and returns zero, so the
            # results should all be zero

        # The address CREATE would have chosen
        8af6a7af30d840ba137e8f3f34d54cfb8beba6e2:
          storage:
            0: 0x001D
            # 0x60A7 - no contract ran
            # 0x001D - the old contract ran
            # 0x00FF - the new contract ran

        # The address CREATE2 would have chosen
        40f1299359ea754ac29eb2662a1900752bf8275f:
          storage:
            0: 0x001D
            # 0x60A7 - no contract ran
            # 0x001D - the old contract ran
            # 0x00FF - the new contract ran

